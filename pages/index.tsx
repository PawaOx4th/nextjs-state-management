import Card from '@/src/components/Card';
import { CombineStore } from '@/src/stores/CombindStore';
import { ITodo } from '@/src/stores/todo/ITodo';
import { ITodoStore, TodoStore } from '@/src/stores/todo/TodoStore';
import { IUser } from '@/src/stores/User/IUser';
import { UserStore } from '@/src/stores/User/UserStore';

import { useAtom } from 'jotai';
import type {
  GetServerSideProps,
  InferGetServerSidePropsType,
  NextPage
} from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { useDebugValue, useEffect, useMemo, useState } from 'react';

export type IGetTodoList = {
  listTodo?: Omit<ITodoStore, 'listTodo'>;
  users?: IUser[];
};

export const getServerSideProps: GetServerSideProps<
  IGetTodoList
> = async () => {
  const response = await fetch('https://jsonplaceholder.typicode.com/todos');
  const result: ITodo[] = await response.json();
  // console.log('🐳 RESULT :', result[0]);
  const responseUser = await fetch(
    'https://jsonplaceholder.typicode.com/users'
  );
  const resultUser: IUser[] = await responseUser.json();

  return {
    props: {
      listTodo: result,
      users: resultUser
    }
  };
};

const Home: NextPage = () => {
  const [todoStore, setTodos] = useAtom(TodoStore);
  const [combindStore] = useAtom(CombineStore);
  const [users] = useAtom(UserStore);

  const todos = useMemo(() => {
    const _todoStore = [...todoStore.listTodo];
    return _todoStore.splice(0, 10);
  }, [todoStore.listTodo]);

  useDebugValue(todoStore);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        className="
      container mx-auto flex min-h-screen w-full flex-col items-center justify-center gap-4 font-inter text-2xl font-semibold
      "
      >
        NextJs + State management. ⚡
        <hr />
        <span>Todo count : {combindStore}</span>
        <div>
          {todos.map((todo, index) => {
            return <Card content={todo} key={todo.id} />;
          })}
        </div>
        <hr />
        {/* <code>{JSON.stringify(users.users[0])}</code> */}
      </main>
    </div>
  );
};

export default Home;
